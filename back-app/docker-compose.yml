version: '3.8'
services:
  app:
    build: .
    ports:
      - "8081:8081"  # Opcional: solo si quiero acceso directo
    env_file:
      - .env
    environment:  #Opcional :  inyectar envairoments 1x1 o usar env file (linea 7,8)para inyectar todas
     - SPRING_PROFILES_ACTIVE=docker # para que spring use el application-docker.properties
    # las siguientes fueron inyectadas con env_file
    # - MYSQL_USER=${MYSQL_USER}
    # - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    # - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    networks:
      - app-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  frontend:
    image: nginx:alpine # uso esta para que ande docker ya que perdi la imaagen de front del ejersicio (es una imagen vacia) # o build si constru√≠s localmente
    ports:
      - "4200:4200"  # opcional si quiero acceso directo
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro

    depends_on:
      - app
      - frontend
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
